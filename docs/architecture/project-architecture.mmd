```mermaid
graph TB
    %% GeoMasterPy Project Architecture
    
    subgraph "🌍 GeoMasterPy - Advanced Land Management Platform"
        direction TB
        
        subgraph "🎯 Core Application"
            APP[Land Management Web App<br/>land-app-ui-mockup.html]
            STREAMLIT[Streamlit Interface<br/>streamlit_app.py]
            RUNNER[Main Runner<br/>run_app.py]
        end
        
        subgraph "📦 Python Package Structure"
            direction LR
            GEOMASTERPY[geomasterpy/]
            
            subgraph "🗺️ Mapping Components"
                INTERACTIVE[interactive_map.py]
                SPLITMAP[split_map.py]
                CARTOPY[cartopy_maps.py]
            end
            
            subgraph "📊 Analysis & Data"
                GEOSPATIAL[geospatial.py]
                CATALOG[catalog.py]
                EXPORT[data_export.py]
            end
            
            subgraph "🎨 Visualization"
                VIZ[visualization.py]
            end
        end
        
        subgraph "🔧 External Dependencies"
            LEAFLET[🍃 Leaflet.js<br/>Interactive Maps]
            EARTHENGINE[🌍 Google Earth Engine<br/>Satellite Data]
            STREAMLITFW[⚡ Streamlit<br/>Web Framework]
            PANDAS[🐼 Pandas<br/>Data Processing]
        end
        
        subgraph "📁 Project Organization"
            direction TB
            
            subgraph "📚 Documentation"
                ARCHITECTURE[docs/architecture/]
                USERGUIDE[docs/user_guide/]
                API[docs/api/]
            end
            
            subgraph "💻 Source Code"
                SRC[src/web/]
                GEOPY[geomasterpy/]
            end
            
            subgraph "🚀 Deployment"
                DEPLOY[deployment/]
                SCRIPTS[scripts/]
            end
            
            subgraph "📦 Archive"
                OLDAPPS[archive/old_apps/]
                VENDOR[archive/vendor/]
                OLDSCRIPTS[archive/old_scripts/]
            end
        end
        
        subgraph "🌟 Key Features"
            direction LR
            DRAWING[✏️ Drawing Tools<br/>Polygons, Circles, etc.]
            PLANS[📋 Plans Management<br/>Feature Organization]
            OSM[🗺️ OpenStreetMap<br/>Integration]
            LEARNING[🎓 Learning Centre<br/>Educational Content]
            ROUTING[🔗 URL Routing<br/>Navigation System]
        end
    end
    
    %% Connections
    APP --> LEAFLET
    APP --> OSM
    STREAMLIT --> STREAMLITFW
    RUNNER --> EARTHENGINE
    GEOMASTERPY --> PANDAS
    INTERACTIVE --> LEAFLET
    CARTOPY --> VIZ
    CATALOG --> EARTHENGINE
    
    %% Feature connections
    APP --> DRAWING
    APP --> PLANS
    APP --> LEARNING
    APP --> ROUTING
    
    %% Documentation flows
    ARCHITECTURE -.-> APP
    USERGUIDE -.-> LEARNING
    API -.-> GEOMASTERPY
    
    %% Deployment flows
    DEPLOY -.-> STREAMLIT
    SCRIPTS -.-> EARTHENGINE
    
    %% Styling
    classDef coreApp fill:#e1f5fe,stroke:#01579b,stroke-width:3px
    classDef dependency fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef feature fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px
    classDef docs fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef archive fill:#fafafa,stroke:#616161,stroke-width:1px,stroke-dasharray: 5 5
    
    class APP,STREAMLIT,RUNNER coreApp
    class LEAFLET,EARTHENGINE,STREAMLITFW,PANDAS dependency
    class DRAWING,PLANS,OSM,LEARNING,ROUTING feature
    class ARCHITECTURE,USERGUIDE,API docs
    class OLDAPPS,VENDOR,OLDSCRIPTS archive
```

## 🏗️ Project Architecture Overview

### 📂 Directory Structure
```
GeoMasterPy/
├── 🎯 Core Application Files
│   ├── src/web/land-app-ui-mockup.html (Main Web App)
│   ├── streamlit_app.py (Streamlit Interface)
│   └── run_app.py (Application Runner)
│
├── 📦 Python Package
│   └── geomasterpy/
│       ├── map/ (Interactive mapping)
│       ├── analysis/ (Geospatial analysis)
│       ├── data/ (Data management)
│       ├── plotting/ (Visualization)
│       └── viz/ (Advanced visualization)
│
├── 📚 Documentation
│   ├── architecture/ (Technical specs)
│   ├── user_guide/ (User documentation)
│   └── api/ (Development docs)
│
├── 🚀 Deployment
│   ├── deployment/ (Deploy configs)
│   └── scripts/ (Utility scripts)
│
├── 📦 Archive (Historical/Backup)
│   ├── old_apps/ (Previous versions)
│   ├── old_scripts/ (Legacy scripts)
│   └── vendor/ (Third-party code)
│
├── 📖 Examples & Tests
│   ├── examples/ (Usage examples)
│   └── tests/ (Test suites)
│
└── ⚙️ Configuration
    ├── requirements*.txt
    ├── pyproject.toml
    └── setup.py
```

### 🌟 Key Components

#### 🎯 **Main Application**
- **Web Interface**: Modern HTML5 app with Material Design 3
- **Streamlit Dashboard**: Python-based web interface
- **URL Routing**: Hash-based navigation system

#### 🗺️ **Mapping Features**
- **Interactive Maps**: Leaflet.js integration
- **Drawing Tools**: Polygon, circle, rectangle drawing
- **Plans Management**: Feature organization system
- **OpenStreetMap**: Real-time OSM data integration

#### 📊 **Data & Analysis**
- **Google Earth Engine**: Satellite data processing
- **Geospatial Analysis**: Advanced GIS operations
- **Data Export**: Multiple format support
- **Visualization**: Publication-quality maps

#### 🎓 **Learning System**
- **Educational Content**: Interactive tutorials
- **AI Tutor**: Guided learning assistant
- **Achievement System**: Progress tracking
- **Course Library**: Structured learning paths

### 🔧 **Technology Stack**
- **Frontend**: HTML5, CSS3, JavaScript, Leaflet.js
- **Backend**: Python, Streamlit, Google Earth Engine
- **Data**: Pandas, GeoPandas, Earth Engine
- **Visualization**: Cartopy, Matplotlib, Plotly
- **Mapping**: OpenStreetMap, Leaflet, Google Earth Engine

### 🚀 **Deployment Ready**
- Organized file structure
- Clear separation of concerns
- Archived legacy code
- Comprehensive documentation
- Ready for GitHub and Streamlit Cloud
```